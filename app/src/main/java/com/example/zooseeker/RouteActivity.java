package com.example.zooseeker;

import android.content.Intent;
import android.location.Location;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

import java.util.ArrayList;
import java.util.List;

public class RouteActivity extends AppCompatActivity implements UserLocationTracker.LocationObserver
{
    List<String> exhibitsInPlan;
    int directionsIndex;
    private TextView directionView;
    warningUtilities wn;

    private ArrayList<String> directions;
    private UpdatedGraphRoute route;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_route);

        Button exit_button = findViewById(R.id.exit_button);

        // Exit activity when exit button is pressed
        exit_button.setOnClickListener(this::onClosedClicked);

        // Retrieve set of directions from LocationsListActivity, generated by GraphRoute
        Intent intent = getIntent();
        this.directions = (ArrayList<String>) intent.getSerializableExtra("directions_list");
        //this.route = (UpdatedGraphRoute) intent.getSerializableExtra(LocationsListActivity
        //        .GRAPH_ROUTE_KEY);
        directionView = findViewById(R.id.directions);

        // Set directions to first exhibit in list
        updateDirection(this.directions.get(0));
        directionsIndex = 1;

        // Next direction
        Button nextButton = findViewById(R.id.next_route_button);
        nextButton.setOnClickListener(v -> {

                    // Advance to next exhibit, or exit directions UI if finished with list
                    if (directionsIndex < directions.size()) {
                        String result = directions.get(directionsIndex);
                        updateDirection(result);
                        directionsIndex++;
                    }
                    else {
                        directionsIndex = 0;
                        finish();
                    }
                }
        );
        
        // Previous direction
        wn = new warningUtilities();
        Button prevButton = findViewById(R.id.prev_route_button);
        prevButton.setOnClickListener(v -> {
            // Back to the previous exhibit, or give warning if user's at ini.
            if (directionsIndex > 1) {
                directionsIndex--;
                String result = directions.get(directionsIndex-1);
                updateDirection(result);
            } else {
                wn.showError(this, "there is no previous exhibit");
            }
        });
    }

    private void updateDirection(String result) {
        this.directionView.setText(result);
    }

    public void update(Location location) {
        // updateDirection(route.update(location));
    }

    public void onClosedClicked(View view) {
        finish();
    }
}
